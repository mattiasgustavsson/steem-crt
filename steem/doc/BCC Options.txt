@<filename>	Read compiler options from the response file filename
+<filename>	Use alternate compiler configuration file filename
-3	Generate 80386 protected-mode compatible instructions (Default)
-4	Generate 80386/80486 protected-mode compatible instructions
-5	Generate Pentium instructions
-6	Generate Pentium Pro instructions

-A	Use ANSI keywords and extensions
-AK	Use Kernighan and Ritchie keywords and extensions
-AT	Use Borland C++ keywords and extensions (also -A-)
-AU	Use UNIX V keywords and extensions
-a	Default (-a4) data alignment; -a- is byte alignment (-a1)
-an	Align data on "n" boundaries, where 1=byte, 2=word (2 bytes), 4=double word (4 bytes), 8=quad word (8 bytes), 16=paragraph (16 bytes) (Default: -a4)

-B	Compile to .ASM (-S), then assemble to .OBJ
-b	Make enums always integer-sized (Default: -b makes enums integer size)
-b-	Makes enums byte-sized when possible
-C	Turn nested comments on (Default: -C- turn nested comments off)
-CP	Enable code paging (for MBCS)
-c	Compile to .OBJ, no link
-D<name>	Define "name" to the null string
-D<name=string>	Define "name" to "string"

-d	Merge duplicate strings
-d-	Does not merge duplicate strings (Default)
-E<filename>	Specify assembler
-e<filename>	Specify executable file name
-f	Emulate floating point
-f-	No floating point
-ff	Fast floating point
-fp	Correct Pentium FDIV flaw
-gb	Stop batch compilation after first file with warnings (Default = OFF)
-gn	Warnings: stop after n messages (Default = 255)

-G, -G-	Optimize for size/speed; use – O1 and –O2 instead
-H	Generate and use precompiled headers
-H-	Does not generate or use precompiled headers (Default)
-H=<filename>	Set the name of the file for precompiled headers
-H"xxx"	Stop precompiling after header file xxx
-Hc	Cache precompiled header (Must be used with -H or -H"xxx"

-He	Enable precompiled headers with external type files (Default)
-Hh=xxx	Stop precompiling after header file xxx
-Hs	Enable smart cached precompiled headers (Default)
-Hu	Use but do not generate precompiled headers
-I<path>	Include file search path
-in	Make significant identifier length to be n (Default = 250)
-Ja	Expand all template members (including unused members)

-jb	Stop batch compilation after first file with errors (Default = OFF)
-Jgd	Generate definitions for all template instances and merge duplicates (Default)
-Jgx	Generate external references for all template instances
-jn	Errors: stop after n messages (Default = 25)
-K	Default character type unsigned (Default: -K- default character type signed)
-k	Turn on standard stack frame (Default)

-L<path>	Library file search path
-lx	Pass option x to linker
-l-x	Disables option x for the linker
-M	Create a Map file
-n<path>	Sets output directory to path
-O	Optimize jumps
-O1	Generate smallest possible code
-O2	Generate fastest possible code
-Oc	Eliminate duplicate expressions within basic blocks and functions

-Od	Disable all optimizations
-Oi	Expand common intrinsic functions
-OS	Pentium instruction scheduling
-O-S	Disables instruction scheduling
-Og	Optimize for speed; use –O2 instead
-Os	Optimize for speed; use –O2 instead
-Ot	Optimize for size; use –O1 instead
-Ov	Enable loop induction variable and strength reduction

-Ox	Optimize for speed; use –O2 instead
-o<filename>	Compile .OBJ to filename
-P	Perform C++ compile regardless of source extension
-P-	Perform C++ compile depending on source file extension
-P<ext>	Perform C++ compile, set output to extension to .ext
-p	Use Pascal calling convention
-p-	Use C calling convention
-pc	Use C calling convention (Default: -pc, -p-)

-pr	Use fastcall calling convention for passing parameters in registers
-ps	Use stdcall calling convention
-q	Suppress compiler identification banner (Default = OFF)
-R	Include browser information in generated .OBJ files
-RT	Enable runtime type information (Default)
-r	Use register variables (Default)
-r-	Disable the use of register variables
-rd	Use register variables only when register keyword is employed

-S	Compile to assembler
-T-	Removes all assembler options
-Tx	Specify assembler option x
-tW	Target is a Windows application (same as -W)
-tWC	Target is a console application (same as -WC)
-tWD	Generate a .DLL executable (same as -WD)
-tWM	Generate a 32-bit multi-threaded target (same as -WM)
-tWR	Target uses the dynamic RTL (same as -WR)

-tWV	Target uses the VCL
-U<name>	Undefine any previous definitions of name
-u	Generate underscores (Default)
-V	Use smart C++ virtual tables (Default)
-V0	External C++ virtual tables
-V1	Public C++ virtual tables
-VC	Calling convention mangling compatibility
-Vd	for loop variable scoping
-Ve	Zero-length empty base classes

-VF	MFC compatibility
-VI-	Use old Borland search algorithm to locate header files (look first in current working directory)
-Vl	Use old-style Borland C++ structure layout (for compatibility with older versions of BCC32.EXE)
-Vmd	Use the smallest possible representation for member pointers 
-Vmm	Support multiple inheritance for member pointers
-Vmp	Honor declared precision of member pointers

-Vms	Support single inheritance for member pointers
-Vmv	Place no restrictions on where member pointers can point (Default)
-Vx	Zero-length empty class member functions
-v	Turn on source debugging
-vi	Control expansion of inline functions
-W	Target is a Windows application (same as -tW)
-WC	Target is a console application (same as -tWC)
-WD	Generate a .DLL executable (same as -tWD)

-WM	Generate a 32-bit multi-threaded target (same as -tWM)
-WR	Target uses the dynamic RTL (same as -tWR)
-WU	Generates Unicode application
-w	Display warnings on
-w!	Returns non-zero from compiler on warnings
-wxxx	Enable xxx warning message
-w-xxx	Disable xxx warning message
-wmsg	User-defined warnings
-X	Disable compiler autodependency output (Default: -X- use compiler autodependency output)

-x	Enable exception handling (Default)
-xd	Enable destructor cleanup (Default)
-xdg	Use global destructor count (for compatibility with older versions of BCC32.EXE)
-xf	Enable fast exception prologs
-xp	Enable exception location information
-xs	Enable slow exception epilogues
-y	Debug line numbers on